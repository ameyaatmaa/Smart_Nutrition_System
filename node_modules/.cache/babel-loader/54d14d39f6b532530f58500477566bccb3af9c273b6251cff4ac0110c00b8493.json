{"ast":null,"code":"// Google OAuth Authentication Utility\n\n// Google OAuth Configuration\nexport const GOOGLE_CONFIG = {\n  clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID || 'your-google-client-id',\n  clientSecret: process.env.REACT_APP_GOOGLE_CLIENT_SECRET || 'your-google-client-secret',\n  redirectUri: process.env.REACT_APP_GOOGLE_REDIRECT_URI || 'http://localhost:3000/auth/google/callback',\n  scope: 'email profile'\n};\n\n// Initialize Google OAuth\nexport const initializeGoogleAuth = () => {\n  return new Promise((resolve, reject) => {\n    // Load Google API\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.onload = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: GOOGLE_CONFIG.clientId,\n          callback: handleGoogleSignIn,\n          auto_select: false,\n          cancel_on_tap_outside: true\n        });\n        resolve();\n      } else {\n        reject(new Error('Google API failed to load'));\n      }\n    };\n    script.onerror = () => reject(new Error('Failed to load Google API'));\n    document.head.appendChild(script);\n  });\n};\n\n// Handle Google Sign In\nexport const handleGoogleSignIn = response => {\n  if (response.credential) {\n    const decoded = jwt_decode(response.credential);\n    return {\n      success: true,\n      user: {\n        id: decoded.sub,\n        email: decoded.email,\n        name: decoded.name,\n        picture: decoded.picture,\n        given_name: decoded.given_name,\n        family_name: decoded.family_name\n      }\n    };\n  }\n  return {\n    success: false,\n    error: 'No credential received'\n  };\n};\n\n// Render Google Sign In Button\nexport const renderGoogleSignInButton = elementId => {\n  if (window.google && window.google.accounts) {\n    window.google.accounts.id.renderButton(document.getElementById(elementId), {\n      theme: 'outline',\n      size: 'large',\n      type: 'standard',\n      text: 'signin_with',\n      shape: 'rectangular',\n      logo_alignment: 'left',\n      width: 300\n    });\n  }\n};\n\n// Sign Out from Google\nexport const signOutFromGoogle = () => {\n  if (window.google && window.google.accounts) {\n    window.google.accounts.id.disableAutoSelect();\n    window.google.accounts.id.revoke(localStorage.getItem('google_token'), () => {\n      localStorage.removeItem('google_token');\n    });\n  }\n};\n\n// Mock JWT Decode function (in production, use a proper JWT library)\nconst jwt_decode = token => {\n  try {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error('Error decoding JWT:', error);\n    return {};\n  }\n};\n\n// Check if user is signed in with Google\nexport const isGoogleSignedIn = () => {\n  return localStorage.getItem('google_token') !== null;\n};\n\n// Get Google user data\nexport const getGoogleUserData = () => {\n  const token = localStorage.getItem('google_token');\n  if (token) {\n    return jwt_decode(token);\n  }\n  return null;\n};","map":{"version":3,"names":["GOOGLE_CONFIG","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","clientSecret","REACT_APP_GOOGLE_CLIENT_SECRET","redirectUri","REACT_APP_GOOGLE_REDIRECT_URI","scope","initializeGoogleAuth","Promise","resolve","reject","script","document","createElement","src","onload","window","google","accounts","id","initialize","client_id","callback","handleGoogleSignIn","auto_select","cancel_on_tap_outside","Error","onerror","head","appendChild","response","credential","decoded","jwt_decode","success","user","sub","email","name","picture","given_name","family_name","error","renderGoogleSignInButton","elementId","renderButton","getElementById","theme","size","type","text","shape","logo_alignment","width","signOutFromGoogle","disableAutoSelect","revoke","localStorage","getItem","removeItem","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","console","isGoogleSignedIn","getGoogleUserData"],"sources":["C:/Users/HP/OneDrive/Desktop/Nutrition suggestion/src/utils/googleAuth.js"],"sourcesContent":["// Google OAuth Authentication Utility\r\n\r\n// Google OAuth Configuration\r\nexport const GOOGLE_CONFIG = {\r\n  clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID || 'your-google-client-id',\r\n  clientSecret: process.env.REACT_APP_GOOGLE_CLIENT_SECRET || 'your-google-client-secret',\r\n  redirectUri: process.env.REACT_APP_GOOGLE_REDIRECT_URI || 'http://localhost:3000/auth/google/callback',\r\n  scope: 'email profile'\r\n};\r\n\r\n// Initialize Google OAuth\r\nexport const initializeGoogleAuth = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // Load Google API\r\n    const script = document.createElement('script');\r\n    script.src = 'https://accounts.google.com/gsi/client';\r\n    script.onload = () => {\r\n      if (window.google) {\r\n        window.google.accounts.id.initialize({\r\n          client_id: GOOGLE_CONFIG.clientId,\r\n          callback: handleGoogleSignIn,\r\n          auto_select: false,\r\n          cancel_on_tap_outside: true,\r\n        });\r\n        resolve();\r\n      } else {\r\n        reject(new Error('Google API failed to load'));\r\n      }\r\n    };\r\n    script.onerror = () => reject(new Error('Failed to load Google API'));\r\n    document.head.appendChild(script);\r\n  });\r\n};\r\n\r\n// Handle Google Sign In\r\nexport const handleGoogleSignIn = (response) => {\r\n  if (response.credential) {\r\n    const decoded = jwt_decode(response.credential);\r\n    return {\r\n      success: true,\r\n      user: {\r\n        id: decoded.sub,\r\n        email: decoded.email,\r\n        name: decoded.name,\r\n        picture: decoded.picture,\r\n        given_name: decoded.given_name,\r\n        family_name: decoded.family_name\r\n      }\r\n    };\r\n  }\r\n  return { success: false, error: 'No credential received' };\r\n};\r\n\r\n// Render Google Sign In Button\r\nexport const renderGoogleSignInButton = (elementId) => {\r\n  if (window.google && window.google.accounts) {\r\n    window.google.accounts.id.renderButton(\r\n      document.getElementById(elementId),\r\n      {\r\n        theme: 'outline',\r\n        size: 'large',\r\n        type: 'standard',\r\n        text: 'signin_with',\r\n        shape: 'rectangular',\r\n        logo_alignment: 'left',\r\n        width: 300\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n// Sign Out from Google\r\nexport const signOutFromGoogle = () => {\r\n  if (window.google && window.google.accounts) {\r\n    window.google.accounts.id.disableAutoSelect();\r\n    window.google.accounts.id.revoke(localStorage.getItem('google_token'), () => {\r\n      localStorage.removeItem('google_token');\r\n    });\r\n  }\r\n};\r\n\r\n// Mock JWT Decode function (in production, use a proper JWT library)\r\nconst jwt_decode = (token) => {\r\n  try {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n    return JSON.parse(jsonPayload);\r\n  } catch (error) {\r\n    console.error('Error decoding JWT:', error);\r\n    return {};\r\n  }\r\n};\r\n\r\n// Check if user is signed in with Google\r\nexport const isGoogleSignedIn = () => {\r\n  return localStorage.getItem('google_token') !== null;\r\n};\r\n\r\n// Get Google user data\r\nexport const getGoogleUserData = () => {\r\n  const token = localStorage.getItem('google_token');\r\n  if (token) {\r\n    return jwt_decode(token);\r\n  }\r\n  return null;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}